services:
  mongo-dev:
    image: mongo:7.0.2
    restart: on-failure
    container_name: mongo-dev
    environment:
      MONGO_INITDB_DATABASE: dev
      MONGO_INITDB_ROOT_USERNAME: dev
      MONGO_INITDB_ROOT_PASSWORD: 123456
    volumes:
      - mongo-volume:/data
    entrypoint:
      - bash
      - -c
      - |
        echo dev123456 > /data/replica.key
        chmod 400 /data/replica.key
        chown 999:999 /data/replica.key
        cat << EOF > /usr/local/bin/mongo_init.sh
        until mongosh --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' &>/dev/null; do sleep 1; done
        sleep 5
        mongosh -u $$MONGO_INITDB_ROOT_USERNAME -p $$MONGO_INITDB_ROOT_PASSWORD --eval 'rs.initiate({"_id":"rs0","members":[{"_id":0,"host":"$$(hostname):27017"}]})'
        EOF
        chmod +x /usr/local/bin/mongo_init.sh && mongo_init.sh &
        exec docker-entrypoint.sh mongod --bind_ip_all --replSet rs0 --keyFile /data/replica.key
    ports:
      - 27017:27017
  redis-dev:
    image: redis:7.2.3-alpine
    container_name: redis-dev
    restart: on-failure
    command: redis-server --requirepass dev
    mem_limit: 128M
    ports:
      - 6379:6379
  nats-dev:
    image: nats:2.10
    container_name: nats-dev
    restart: on-failure
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "-js --http_port 8222"

volumes:
  mongo-volume: